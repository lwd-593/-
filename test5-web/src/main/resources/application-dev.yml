spring:
  main:
    allow-bean-definition-overriding: true
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://192.168.1.236/datatest?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC&allowMultiQueries=true&useSSL=false
    username: root
    password: root@123
    # 指定连接池中最大的活跃连接数.
    max-active: 30
    # 指定连接池最大的空闲连接数量.
    max-idle: 8
    # 指定必须保持连接的最小值(For DBCP and Tomcat connection pools)
    min-idle: 0
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 连接保持空闲而不被驱逐的最小时间
    min-evictable-idle-time-millis: 300000
    # 用来检测连接是否有效的sql，要求是一个查询语句
    validation-query: SELECT 1 FROM testdata
    # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
  #flyway:
    #locations: classpath:/db/migration
    #url:
    #user:
    #password:

  # 时间格式化
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8


  rabbitmq:
    host: 192.168.1.236
    port: 5672
    username: admin
    password: admin
    virtual-host: /
    publisher-confirms: true  #  消息发送到交换机确认机制,是否确认回调
    publisher-returns: true

    listener:
      simple:
        acknowledge-mode: manual # 手动ACK 不开启自动ACK模式,目的是防止报错后未正确处理消息丢失 默认 为 none
        concurrency: 5 #消费端监听个数
        max-concurrency: 10 #最大监听个数(最大并发数)
    template:
      mandatory: true  #return 的时候代表消息不可达，设置 broker 不自动删除该消息，而是返回到生产端，让我们进行一些后续的处理
    ttl-time: 10000

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB

  #redis配置
  ################################################
  redis:
    #redis数据库索引(默认为0)
    database: 0
    #redis服务器IP地址host：
    host: 127.0.0.1
    #redis端口号
    port: 6379
    #redis密码，默认为空
    password:
    #连接redis超时时间（毫秒）
    time-out: 5000ms
    lettuce:
      pool:
        max-active: 50         # 连接池最大连接数（使用负值表示没有限制） 默认 8
        max-wait: -1ms        # 连接池最大阻塞等待时间（使用负值表示没有限制） 默认 -1
        max-idle: 8           # 连接池中的最大空闲连接 默认 8
        min-idle: 0           # 连接池中的最小空闲连接 默认 0





#
#  # 初始化时建立物理连接的个数
#    druid:
#      initial-size: 5
#    # 最大连接池数量
#      max-active: 30
#    # 最小连接池数量
#      min-idle: 5
#    # 获取连接时最大等待时间，单位毫秒
#      max-wait: 60000
#    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
#      time-between-eviction-runs-millis: 60000
#    # 连接保持空闲而不被驱逐的最小时间
#      min-evictable-idle-time-millis: 300000
#    # 用来检测连接是否有效的sql，要求是一个查询语句
#      validation-query: SELECT 1 FROM DUAL
#    # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
#      test-while-idle: true
#    # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#      test-on-borrow: false
#    # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
#      test-on-return: false
#    # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
#      pool-prepared-statements: true
#    # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
#      max-pool-prepared-statement-per-connection-size: 50
#    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计
#      filters: stat,wall
#    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
#      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
#    # 合并多个DruidDataSource的监控数据
#      use-global-data-source-stat: true


server:
  port: 8080
  servlet:
    context-path: /test5



mybatis-plus:
  #config-location: classpath*:config/mybatis-config.xml
  mapper-locations: classpath*:mapper/*.xml
  type-aliases-package: com.enzenith.test.entity
  configuration:
    mapUnderscoreToCamelCase: true
  #配置逻辑删除，entity类中的状态字段要配置@TableLogic注解
  global-config:
    db-config:
      #配置逻辑删除字段为1是删除
      logic-delete-value: 1
      #配置逻辑删除字段为0是未删除
      logic-not-delete-value: 0


  # pagehelper分页助手-另一种方式在代码里配置
#pagehelper:
#  helperDialect: mysql
#  reasonable: false
#  supportMethodsArguments: true
#  params: count=countSql

#sys:
  #file.serverUrl: https://files.enzenith.com/fileweb/api/test/test/v1/users

#logging:
#  config: classpath:logback-spring-dev.xml

